---
interface Props {
  hero?: boolean;
}

const { hero } = Astro.props;

const wrapperClasses = `title-block ${hero ? "hero" : ""}`;

import { Image } from "astro:assets";

import AnimatedEntrance from "../AnimatedEntrance.vue";
import Menu from "../Menu.vue";
import Typer from "../Typer.vue";

import headshotImg from "../../assets/headshot.png";

const heroSpeedAdjustment = 1.3;
---

<div id="title-block" class={wrapperClasses}>
  <a
    href="javascript:document.getElementById('menu-link')?.click()"
    title="Show Menu"
    aria-label="Show Menu"
  >
    {
      hero ? (
        <AnimatedEntrance
          client:load
          type="fadeInDown"
          delay={3.5 / heroSpeedAdjustment}
          name="titleHeadshot"
          once
        >
          <Image
            src={headshotImg}
            alt="Brian Adams Headshot"
            width="700"
            transition:name="title-photo"
            loading="eager"
          />
        </AnimatedEntrance>
      ) : (
        <Image
          src={headshotImg}
          alt="Brian Adams Headshot"
          width="160"
          transition:name="title-photo"
          loading="eager"
        />
      )
    }
  </a>

  <div class="title">
    <div class="name" transition:name="title-name">
      <a
        href="javascript:document.getElementById('menu-link')?.click()"
        aria-label="Show Menu"
      >
        <span class="bracket">
          {
            hero ? (
              <Typer
                text="<"
                client:load
                duration={100 / heroSpeedAdjustment}
                name="titleStartBracket"
                once
              />
            ) : (
              "<"
            )
          }
        </span>

        <span class="text-gradient">
          {
            hero ? (
              <Typer
                text="Brian D. Adams"
                client:load
                duration={1000 / heroSpeedAdjustment}
                delay={100 / heroSpeedAdjustment}
                name="titleName"
                once
              />
            ) : (
              "Brian D. Adams"
            )
          }
        </span>

        <span class="bracket">
          {
            hero ? (
              <Typer
                text="/>"
                client:load
                duration={100 / heroSpeedAdjustment}
                delay={1100 / heroSpeedAdjustment}
                name="titleEndBracket"
                once
              />
            ) : (
              "/>"
            )
          }
        </span>
      </a>
    </div>
    <div class="desc" transition:name="title-desc">
      <a
        href="javascript:document.getElementById('menu-link')?.click()"
        aria-label="Show Menu"
      >
        <span class="bracket">
          {
            hero ? (
              <Typer
                text="["
                client:load
                duration={100 / heroSpeedAdjustment}
                delay={1300 / heroSpeedAdjustment}
                name="titleStartBracket"
                once
              />
            ) : (
              "["
            )
          }
        </span>
        <span class="string">
          {
            hero ? (
              <Typer
                text='"web developer"'
                client:load
                duration={1000 / heroSpeedAdjustment}
                delay={1400 / heroSpeedAdjustment}
                name="titleWebDev"
                once
              />
            ) : (
              '"web developer"'
            )
          }
        </span>
        {
          hero ? (
            <Typer
              text=","
              client:load
              duration={100 / heroSpeedAdjustment}
              delay={2400 / heroSpeedAdjustment}
              name="titleComma"
              once
            />
          ) : (
            ","
          )
        }

        <span class="string">
          {
            hero ? (
              <Typer
                text='"ui/ux designer"'
                client:load
                duration={1000 / heroSpeedAdjustment}
                delay={2500 / heroSpeedAdjustment}
                name="titleUiUx"
                once
              />
            ) : (
              '"ui/ux designer"'
            )
          }
        </span>
        <span class="bracket">
          {
            hero ? (
              <Typer
                text="]"
                client:load
                duration={100 / heroSpeedAdjustment}
                delay={3500 / heroSpeedAdjustment}
                name="titleEndBracket"
                once
              />
            ) : (
              "]"
            )
          }
        </span>
      </a>
    </div>
    {
      hero && (
        <AnimatedEntrance
          client:load
          delay={4 / heroSpeedAdjustment}
          type="fadeInUp"
          name="titleMenu"
          once
        >
          <div class="menu">
            <Menu
              id="menu"
              client:load
              fixedLink={false}
              showLabel={true}
              transition:name="menu-link"
            />
          </div>
        </AnimatedEntrance>
      )
    }
  </div>
</div>

<style lang="scss">
  .title-block {
    text-shadow: 0 0 20px rgba(0, 0, 0, 0.3);
    display: flex;
    margin: 0 auto;
    align-items: center;
    font-family: "IBM Plex Mono", monospace;
    font-size: calc(1em + 2vw);
    justify-content: center;
    gap: 10px;
  }

  img {
    object-fit: cover;
    width: 80px;
    height: inherit;
  }

  .hero {
    font-size: calc(1em + 4vw);
    min-height: 100vh;
    justify-content: center;
    flex-direction: column;

    img {
      width: 350px;
      height: 260px;
      background-position: 45% 20%;
      object-position: 50% 10%;
    }
  }

  .bracket {
    color: var(--color-secondary);
  }

  .string {
    color: var(--color-primary);
  }

  a {
    text-decoration: none;
    color: var(--color-link);
  }

  .name {
    font-weight: 400;
    text-align: center;
    padding: 0;
    margin-top: 0;
    margin-bottom: 0;
  }

  .desc {
    text-align: center;
    font-size: 0.45em;
    margin-top: 1px;
  }

  .menu {
    padding-top: 50px;
  }
</style>
