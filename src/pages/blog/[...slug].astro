---
import { Image, getImage } from "astro:assets";
import { getCollection, render } from "astro:content";

import Layout from "@layouts/Layout.astro";
import { getReadingTime } from "@utils/readingTime";

export async function getStaticPaths() {
  const blogItems = await getCollection("blog");
  return blogItems.map((entry) => ({
    params: { slug: entry.id },
    props: { entry },
  }));
}

const { entry } = Astro.props;
const { Content } = await render(entry);

const openGraphImage = await getImage({
  src: entry.data.heroImage,
  width: 600,
  format: "jpg",
});
---

<Layout
  title={`${entry.data.title} | Blog`}
  description={entry.data.description}
  openGraph={{
    basic: {
      title: entry.data.title,
      type: "article",
      image: new URL(openGraphImage.src, Astro.site).href,
    },
    optional: {
      description: entry.data.description,
    },
  }}
  sourceLink="/src/pages/blog/[...slug].astro"
  contentLink={`/src/content/blog/${entry.id}`}
>
  <main>
    <div class="card">
      <span>
        <a href="/blog" class="back">
          <i class="fa-sharp fa-solid fa-arrow-left-long"></i>
          Back to All Posts
        </a>
      </span>

      <div class="title">
        <h1 transition:name={`${entry.id}-title`}>{entry.data.title}</h1>
        {
          entry.data.subtitle && (
            <h2 transition:name={`${entry.id}-subtitle`}>
              {entry.data.subtitle}
            </h2>
          )
        }
        <div class="meta">
          <strong transition:name={`${entry.id}-date`}>
            {
              entry.data.pubDate.toLocaleDateString("en-us", {
                weekday: "long",
                year: "numeric",
                month: "long",
                day: "numeric",
              })
            }
          </strong>
          &middot;
          <span class="reading-time">{getReadingTime(entry.body)}</span>
        </div>
      </div>

      {
        entry.data.heroImage && (
          <div class="hero" transition:name={`${entry.id}-hero`}>
            <Image
              src={entry.data.heroImage}
              alt={entry.data.heroImageAltText}
              widths={[420, 600, 840, 1200]}
              sizes="(min-width: 500px) calc(100vw - 40px), calc(100vw - 20px)"
              decoding="async"
            />
          </div>
        )
      }

      <div class="content">
        <Content />
      </div>
    </div>
  </main>
</Layout>

<style lang="scss">
  h1,
  h2 {
    margin: 0;
    padding: 0;
    line-height: 1;
  }

  h2 {
    font-weight: 400;
  }

  .title {
    margin-top: 10px;
    margin-bottom: 25px;
    display: flex;
    gap: 15px;
    flex-direction: column;

    .meta {
      display: flex;
      align-items: center;
      gap: 8px;
      flex-wrap: wrap;
    }

    .reading-time {
      color: var(--color-text-muted);
      font-size: 0.9em;
      font-style: italic;
    }
  }

  div.hero {
    margin-left: -10px;
    margin-right: -10px;

    img {
      max-width: 100%;
      height: inherit;
    }
  }

  .content {
    font-size: 1.1em;

    :global(pre) {
      padding: 10px;
    }

    :global(p) {
      margin-bottom: 25px;
      overflow-wrap: break-word;
    }

    :global(li) {
      margin-bottom: 10px;
    }

    :global(img) {
      width: 100%;
      max-width: 600px;
      display: block;
      height: inherit;

      &.center {
        margin: 0 auto;
      }

      &.large {
        max-width: 720px;
      }

      &.small {
        max-width: 400px;
      }

      &.extra-small {
        max-width: 220px;
      }
    }

    :global(figcaption) {
      font-size: 0.85em;
      color: var(--color-text-muted);

      &.center {
        text-align: center;
      }
    }

    :global(blockquote) {
      font-size: 1.15em;
      font-weight: 800;
      background: var(--color-subcard-background);
      padding: 15px;
      border-radius: 5px;
      color: var(--color-primary);
      margin: 0 10px;
    }

    :global(blockquote p:first-child) {
      margin-top: 0;
    }

    :global(blockquote p:last-child) {
      margin-bottom: 0;
    }
  }

  @media screen and (min-width: 500px) {
    div.hero {
      margin-left: -20px;
      margin-right: -20px;
    }
  }
</style>
