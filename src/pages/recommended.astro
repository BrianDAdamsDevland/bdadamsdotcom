---
import { Image } from "astro:assets";

import Layout from "../layouts/Layout.astro";

import Typer from "../components/Typer.vue";

import { getCollection } from "astro:content";
import Enumerable from "linq";

const allMediaCollection = await getCollection("mediaRecommendations");

const items = Enumerable.from(allMediaCollection)
  .select((i) => ({ ...i.data, slug: i.slug }))
  .toArray();

export function getTypeIcon(type: string) {
  switch (type) {
    case "podcast":
      return "fa-podcast";
    default:
      return "fa-film";
  }
}
---

<Layout
  title="Recommended"
  description="Brian D. Adams recommendations for various media like podcasts, movies and television."
  sourceLink="/src/pages/mediaRecommendations.astro"
>
  <main>
    <div class="card">
      <h1>
        <Typer client:load text="Recommended" duration={650} />
      </h1>

      <div class="items">
        {
          items.map((i) => (
            <div class="item">
              <a href={i.link} target="_blank" class="art">
                <Image
                  src={i.image}
                  alt={i.title}
                  width={80}
                  densities={[1.5, 2]}
                />
              </a>
              <div class="content">
                <a href={i.link} target="_blank">
                  <strong>{i.title}</strong>
                </a>
                <div class="badges">
                  <span class="badge type">
                    <i class={"fa-sharp fa-solid " + getTypeIcon(i.type)} />
                    {i.type}
                  </span>
                  {i.tags?.map((t: string) => (
                    <span class="badge">{t}</span>
                  ))}
                </div>
              </div>
            </div>
          ))
        }
      </div>
    </div>
  </main>
</Layout>

<style lang="scss">
  .items {
    display: grid;
    gap: 25px;
    transition: 200ms;
    grid-template-columns: repeat(auto-fit, minmax(260px, 1fr));
  }

  .item {
    display: flex;
    gap: 10px;
    align-items: stretch;

    .content {
      display: flex;
      flex-direction: column;
      gap: 5px;
      justify-content: space-between;

      strong {
        line-height: 1.2;
        display: block;
      }
    }

    .badges {
      display: flex;
      gap: 6px;
    }

    img {
      aspect-ratio: 1/1;
      height: inherit;
      object-fit: cover;
    }

    a {
      text-decoration: none;
    }

    .art {
      line-height: 0;
    }
  }

  .badge {
    border-radius: 15px;
    padding: 3px 8px;
    background: var(--color-subcard-background);
    font-size: 0.7em;
    font-weight: 700;
  }

  .badge.type {
    background: var(--color-secondary);
    color: var(--color-card-background);
  }

</style>
