---
interface Props {
  title: string;
  description: string;
  openGraph?: SEOProps["openGraph"];
  heroTitle?: boolean;
  hideMenu?: boolean;
  sourceLink: string;
  contentLink?: string;
}

const {
  title,
  description,
  openGraph,
  heroTitle,
  hideMenu,
  sourceLink,
  contentLink,
} = Astro.props;

import Title from "@components/Title/Title.astro";
import Menu from "@components/Menu.vue";
import Footer from "@components/Footer.astro";
import { Head } from "astro-capo";

import { ViewTransitions } from "astro:transitions";
import { SEO, type Props as SEOProps } from "astro-seo";

import "@fontsource/ibm-plex-mono/400.css";
import "@fontsource/ibm-plex-mono/700.css";
import "@fontsource/ibm-plex-mono/400-italic.css";

import "animate.css/animate.min.css";
import "../assets/theme.scss";
import "../assets/global.scss";
---

<!doctype html>
<html lang="en">
  <Head>
    <SEO
      title={title}
      titleTemplate="%s | bdadams.com"
      description={description}
      charset="UTF-8"
      openGraph={openGraph}
      extend={{
        link: [
          {
            rel: "alternate",
            type: "application/rss+xml",
            title: "Blog",
            href: "/rss.xml",
          },
          {
            rel: "sitemap",
            href: "/sitemap-index.xml",
          },
        ],
        meta: [
          {
            name: "generator",
            content: Astro.generator,
          },
        ],
      }}
    />

    <meta data-pagefind-meta={"title:" + title} />

    <meta name="viewport" content="width=device-width" />
    <link rel="icon" type="image/png" href="/favicon-32x32.png" />

    <link
      rel="stylesheet"
      href="https://kit.fontawesome.com/d39a110d2c.css"
      crossorigin="anonymous"
    />

    <script is:inline type="text/javascript">
      (function (c, l, a, r, i, t, y) {
        c[a] =
          c[a] ||
          function () {
            (c[a].q = c[a].q || []).push(arguments);
          };
        t = l.createElement(r);
        t.async = 1;
        t.src = "https://www.clarity.ms/tag/" + i;
        y = l.getElementsByTagName(r)[0];
        y.parentNode.insertBefore(t, y);
      })(window, document, "clarity", "script", "l1t8b3e7va");
    </script>

    <ViewTransitions fallback="swap" />
  </Head>
  <body>
    {!hideMenu && <Menu client:only transition:name="menu-link" />}
    <Title hero={heroTitle} transition:name="title" />
    <slot />

    <Footer sourceLink={sourceLink} contentLink={contentLink} />

    <!-- Based on: https://www.kevinzunigacuellar.com/blog/dark-mode-in-astro/ -->
    <script is:inline>
      const handleOverrideTheme = () => {
        const overrideTheme = (() => {
          if (localStorage?.getItem("theme")) {
            return localStorage.getItem("theme");
          }
        })();

        document.documentElement.classList.add(overrideTheme);
      };

      handleOverrideTheme();

      document.addEventListener("astro:after-swap", handleOverrideTheme);

      document.addEventListener("astro:before-swap", (e) => {
        sessionStorage.setItem("prevHref", e.from.href);
      });
    </script>
  </body>
</html>
